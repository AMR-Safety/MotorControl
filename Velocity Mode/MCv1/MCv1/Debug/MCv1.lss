
MCv1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000770  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000071c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ef9  00000000  00000000  00000888  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ce9  00000000  00000000  00001781  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000057e  00000000  00000000  0000246a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  000029e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005d5  00000000  00000000  00002b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003cb  00000000  00000000  000030f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000034c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 76 00 	call	0xec	; 0xec <main>
  bc:	0c 94 8c 03 	jmp	0x718	; 0x718 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <set_direction>:
	PORTB &= ~(1 << EN_PIN);  // Enable driver (active LOW)
	set_direction(1);         // Default direction = forward
}

void set_direction(uint8_t forward) {
	if (forward) {
  c4:	88 23       	and	r24, r24
  c6:	21 f0       	breq	.+8      	; 0xd0 <set_direction+0xc>
		PORTB |= (1 << DIR_PIN);
  c8:	85 b1       	in	r24, 0x05	; 5
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	85 b9       	out	0x05, r24	; 5
  ce:	08 95       	ret
		} else {
		PORTB &= ~(1 << DIR_PIN);
  d0:	85 b1       	in	r24, 0x05	; 5
  d2:	8f 7b       	andi	r24, 0xBF	; 191
  d4:	85 b9       	out	0x05, r24	; 5
  d6:	08 95       	ret

000000d8 <setup_pins>:
// direction.c
#include "direction.h"

void setup_pins(void) {
	DDRB |= (1 << STEP_PIN) | (1 << DIR_PIN) | (1 << EN_PIN);
  d8:	84 b1       	in	r24, 0x04	; 4
  da:	80 67       	ori	r24, 0x70	; 112
  dc:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~(1 << EN_PIN);  // Enable driver (active LOW)
  de:	85 b1       	in	r24, 0x05	; 5
  e0:	8f 7e       	andi	r24, 0xEF	; 239
  e2:	85 b9       	out	0x05, r24	; 5
	set_direction(1);         // Default direction = forward
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	0e 94 62 00 	call	0xc4	; 0xc4 <set_direction>
  ea:	08 95       	ret

000000ec <main>:
#include "scurve.h"

#define USE_TRAPEZOID 0 // Set to 1 for trapezoidal, 0 for S-curve

int main(void) {
	setup_pins();
  ec:	0e 94 6c 00 	call	0xd8	; 0xd8 <setup_pins>
	set_direction(0);  // Forward
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	0e 94 62 00 	call	0xc4	; 0xc4 <set_direction>

	#if USE_TRAPEZOID
	run_trapezoidal_velocity(104.72f);  // ? 1000 RPM
	#else
	run_scurve_velocity(104.72f);       // ? 1000 RPM
  f6:	64 ea       	ldi	r22, 0xA4	; 164
  f8:	70 e7       	ldi	r23, 0x70	; 112
  fa:	81 ed       	ldi	r24, 0xD1	; 209
  fc:	92 e4       	ldi	r25, 0x42	; 66
  fe:	0e 94 bb 00 	call	0x176	; 0x176 <run_scurve_velocity>
 102:	ff cf       	rjmp	.-2      	; 0x102 <main+0x16>

00000104 <s_curve_profile>:
#include <math.h>

#define SCURVE_STEPS 50
#define SCURVE_DELAY_MS 50

static float s_curve_profile(float x) {
 104:	8f 92       	push	r8
 106:	9f 92       	push	r9
 108:	af 92       	push	r10
 10a:	bf 92       	push	r11
 10c:	cf 92       	push	r12
 10e:	df 92       	push	r13
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	6b 01       	movw	r12, r22
 116:	7c 01       	movw	r14, r24
	// S-curve shaping function: 3x^2 - 2x^3
	return 3 * x * x - 2 * x * x * x;
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	40 e4       	ldi	r20, 0x40	; 64
 11e:	50 e4       	ldi	r21, 0x40	; 64
 120:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 124:	9b 01       	movw	r18, r22
 126:	ac 01       	movw	r20, r24
 128:	c7 01       	movw	r24, r14
 12a:	b6 01       	movw	r22, r12
 12c:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 130:	4b 01       	movw	r8, r22
 132:	5c 01       	movw	r10, r24
 134:	a7 01       	movw	r20, r14
 136:	96 01       	movw	r18, r12
 138:	c7 01       	movw	r24, r14
 13a:	b6 01       	movw	r22, r12
 13c:	0e 94 56 01 	call	0x2ac	; 0x2ac <__addsf3>
 140:	9b 01       	movw	r18, r22
 142:	ac 01       	movw	r20, r24
 144:	c7 01       	movw	r24, r14
 146:	b6 01       	movw	r22, r12
 148:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 14c:	9b 01       	movw	r18, r22
 14e:	ac 01       	movw	r20, r24
 150:	c7 01       	movw	r24, r14
 152:	b6 01       	movw	r22, r12
 154:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 158:	9b 01       	movw	r18, r22
 15a:	ac 01       	movw	r20, r24
 15c:	c5 01       	movw	r24, r10
 15e:	b4 01       	movw	r22, r8
 160:	0e 94 55 01 	call	0x2aa	; 0x2aa <__subsf3>
}
 164:	ff 90       	pop	r15
 166:	ef 90       	pop	r14
 168:	df 90       	pop	r13
 16a:	cf 90       	pop	r12
 16c:	bf 90       	pop	r11
 16e:	af 90       	pop	r10
 170:	9f 90       	pop	r9
 172:	8f 90       	pop	r8
 174:	08 95       	ret

00000176 <run_scurve_velocity>:

void run_scurve_velocity(float target_omega) {
 176:	cf 92       	push	r12
 178:	df 92       	push	r13
 17a:	ef 92       	push	r14
 17c:	ff 92       	push	r15
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	6b 01       	movw	r12, r22
 184:	7c 01       	movw	r14, r24
	for (int i = 1; i <= SCURVE_STEPS; i++) {
 186:	c1 e0       	ldi	r28, 0x01	; 1
 188:	d0 e0       	ldi	r29, 0x00	; 0
 18a:	1f c0       	rjmp	.+62     	; 0x1ca <run_scurve_velocity+0x54>
		float x = (float)i / SCURVE_STEPS;
 18c:	be 01       	movw	r22, r28
 18e:	0d 2e       	mov	r0, r29
 190:	00 0c       	add	r0, r0
 192:	88 0b       	sbc	r24, r24
 194:	99 0b       	sbc	r25, r25
 196:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__floatsisf>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	48 e4       	ldi	r20, 0x48	; 72
 1a0:	52 e4       	ldi	r21, 0x42	; 66
 1a2:	0e 94 c7 01 	call	0x38e	; 0x38e <__divsf3>
		float omega = s_curve_profile(x) * target_omega;
 1a6:	0e 94 82 00 	call	0x104	; 0x104 <s_curve_profile>
 1aa:	a7 01       	movw	r20, r14
 1ac:	96 01       	movw	r18, r12
 1ae:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
		set_angular_velocity(omega);
 1b2:	0e 94 4e 01 	call	0x29c	; 0x29c <set_angular_velocity>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	80 e7       	ldi	r24, 0x70	; 112
 1ba:	92 e0       	ldi	r25, 0x02	; 2
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <run_scurve_velocity+0x46>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <run_scurve_velocity+0x50>
 1c6:	00 00       	nop
	// S-curve shaping function: 3x^2 - 2x^3
	return 3 * x * x - 2 * x * x * x;
}

void run_scurve_velocity(float target_omega) {
	for (int i = 1; i <= SCURVE_STEPS; i++) {
 1c8:	21 96       	adiw	r28, 0x01	; 1
 1ca:	c3 33       	cpi	r28, 0x33	; 51
 1cc:	d1 05       	cpc	r29, r1
 1ce:	f4 f2       	brlt	.-68     	; 0x18c <run_scurve_velocity+0x16>
		float omega = s_curve_profile(x) * target_omega;
		set_angular_velocity(omega);
		_delay_ms(SCURVE_DELAY_MS);
	}
	// Maintain final velocity
	set_angular_velocity(target_omega);
 1d0:	c7 01       	movw	r24, r14
 1d2:	b6 01       	movw	r22, r12
 1d4:	0e 94 4e 01 	call	0x29c	; 0x29c <set_angular_velocity>
}
 1d8:	df 91       	pop	r29
 1da:	cf 91       	pop	r28
 1dc:	ff 90       	pop	r15
 1de:	ef 90       	pop	r14
 1e0:	df 90       	pop	r13
 1e2:	cf 90       	pop	r12
 1e4:	08 95       	ret

000001e6 <angular_velocity_to_rpm>:
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

float angular_velocity_to_rpm(float omega) {
	return omega * (60.0f / (2.0f * M_PI));
 1e6:	2b ee       	ldi	r18, 0xEB	; 235
 1e8:	39 ec       	ldi	r19, 0xC9	; 201
 1ea:	48 e1       	ldi	r20, 0x18	; 24
 1ec:	51 e4       	ldi	r21, 0x41	; 65
 1ee:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
}
 1f2:	08 95       	ret

000001f4 <rpm_to_ocr>:

uint16_t rpm_to_ocr(float rpm) {
 1f4:	cf 92       	push	r12
 1f6:	df 92       	push	r13
 1f8:	ef 92       	push	r14
 1fa:	ff 92       	push	r15
 1fc:	6b 01       	movw	r12, r22
 1fe:	7c 01       	movw	r14, r24
	if (rpm <= 0) return 65535;
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	a9 01       	movw	r20, r18
 206:	0e 94 c2 01 	call	0x384	; 0x384 <__cmpsf2>
 20a:	18 16       	cp	r1, r24
 20c:	ac f5       	brge	.+106    	; 0x278 <rpm_to_ocr+0x84>
	float steps_per_sec = (rpm * STEPS_PER_REV) / 60.0f;
 20e:	20 e0       	ldi	r18, 0x00	; 0
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	48 ec       	ldi	r20, 0xC8	; 200
 214:	53 e4       	ldi	r21, 0x43	; 67
 216:	c7 01       	movw	r24, r14
 218:	b6 01       	movw	r22, r12
 21a:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 21e:	20 e0       	ldi	r18, 0x00	; 0
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	40 e7       	ldi	r20, 0x70	; 112
 224:	52 e4       	ldi	r21, 0x42	; 66
 226:	0e 94 c7 01 	call	0x38e	; 0x38e <__divsf3>
	float ocr = (float)F_CPU / (PRESCALER * steps_per_sec);
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	40 e0       	ldi	r20, 0x00	; 0
 230:	51 e4       	ldi	r21, 0x41	; 65
 232:	0e 94 1f 03 	call	0x63e	; 0x63e <__mulsf3>
 236:	9b 01       	movw	r18, r22
 238:	ac 01       	movw	r20, r24
 23a:	60 e0       	ldi	r22, 0x00	; 0
 23c:	74 e2       	ldi	r23, 0x24	; 36
 23e:	84 e7       	ldi	r24, 0x74	; 116
 240:	9b e4       	ldi	r25, 0x4B	; 75
 242:	0e 94 c7 01 	call	0x38e	; 0x38e <__divsf3>
 246:	6b 01       	movw	r12, r22
 248:	7c 01       	movw	r14, r24
	if (ocr > 65535) ocr = 65535;
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	3f ef       	ldi	r19, 0xFF	; 255
 24e:	4f e7       	ldi	r20, 0x7F	; 127
 250:	57 e4       	ldi	r21, 0x47	; 71
 252:	0e 94 1a 03 	call	0x634	; 0x634 <__gesf2>
 256:	18 16       	cp	r1, r24
 258:	4c f4       	brge	.+18     	; 0x26c <rpm_to_ocr+0x78>
 25a:	0f 2e       	mov	r0, r31
 25c:	c1 2c       	mov	r12, r1
 25e:	dd 24       	eor	r13, r13
 260:	da 94       	dec	r13
 262:	ff e7       	ldi	r31, 0x7F	; 127
 264:	ef 2e       	mov	r14, r31
 266:	f7 e4       	ldi	r31, 0x47	; 71
 268:	ff 2e       	mov	r15, r31
 26a:	f0 2d       	mov	r31, r0
	return (uint16_t)ocr;
 26c:	c7 01       	movw	r24, r14
 26e:	b6 01       	movw	r22, r12
 270:	0e 94 39 02 	call	0x472	; 0x472 <__fixunssfsi>
 274:	cb 01       	movw	r24, r22
 276:	02 c0       	rjmp	.+4      	; 0x27c <rpm_to_ocr+0x88>
float angular_velocity_to_rpm(float omega) {
	return omega * (60.0f / (2.0f * M_PI));
}

uint16_t rpm_to_ocr(float rpm) {
	if (rpm <= 0) return 65535;
 278:	8f ef       	ldi	r24, 0xFF	; 255
 27a:	9f ef       	ldi	r25, 0xFF	; 255
	float steps_per_sec = (rpm * STEPS_PER_REV) / 60.0f;
	float ocr = (float)F_CPU / (PRESCALER * steps_per_sec);
	if (ocr > 65535) ocr = 65535;
	return (uint16_t)ocr;
}
 27c:	ff 90       	pop	r15
 27e:	ef 90       	pop	r14
 280:	df 90       	pop	r13
 282:	cf 90       	pop	r12
 284:	08 95       	ret

00000286 <setup_timer1>:

void setup_timer1(uint16_t ocr_value) {
	TCCR1A = (1 << COM1A0);                 // Toggle OC1A on compare match
 286:	20 e4       	ldi	r18, 0x40	; 64
 288:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (1 << WGM12) | (1 << CS11);    // CTC mode, prescaler = 8
 28c:	2a e0       	ldi	r18, 0x0A	; 10
 28e:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	OCR1A = ocr_value;
 292:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 296:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 29a:	08 95       	ret

0000029c <set_angular_velocity>:
}

void set_angular_velocity(float omega) {
	float rpm = angular_velocity_to_rpm(omega);
 29c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <angular_velocity_to_rpm>
	uint16_t ocr = rpm_to_ocr(rpm);
 2a0:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <rpm_to_ocr>
	setup_timer1(ocr);
 2a4:	0e 94 43 01 	call	0x286	; 0x286 <setup_timer1>
 2a8:	08 95       	ret

000002aa <__subsf3>:
 2aa:	50 58       	subi	r21, 0x80	; 128

000002ac <__addsf3>:
 2ac:	bb 27       	eor	r27, r27
 2ae:	aa 27       	eor	r26, r26
 2b0:	0e 94 6d 01 	call	0x2da	; 0x2da <__addsf3x>
 2b4:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 2b8:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 2bc:	38 f0       	brcs	.+14     	; 0x2cc <__addsf3+0x20>
 2be:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 2c2:	20 f0       	brcs	.+8      	; 0x2cc <__addsf3+0x20>
 2c4:	39 f4       	brne	.+14     	; 0x2d4 <__addsf3+0x28>
 2c6:	9f 3f       	cpi	r25, 0xFF	; 255
 2c8:	19 f4       	brne	.+6      	; 0x2d0 <__addsf3+0x24>
 2ca:	26 f4       	brtc	.+8      	; 0x2d4 <__addsf3+0x28>
 2cc:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 2d0:	0e f4       	brtc	.+2      	; 0x2d4 <__addsf3+0x28>
 2d2:	e0 95       	com	r30
 2d4:	e7 fb       	bst	r30, 7
 2d6:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>

000002da <__addsf3x>:
 2da:	e9 2f       	mov	r30, r25
 2dc:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 2e0:	58 f3       	brcs	.-42     	; 0x2b8 <__addsf3+0xc>
 2e2:	ba 17       	cp	r27, r26
 2e4:	62 07       	cpc	r22, r18
 2e6:	73 07       	cpc	r23, r19
 2e8:	84 07       	cpc	r24, r20
 2ea:	95 07       	cpc	r25, r21
 2ec:	20 f0       	brcs	.+8      	; 0x2f6 <__addsf3x+0x1c>
 2ee:	79 f4       	brne	.+30     	; 0x30e <__addsf3x+0x34>
 2f0:	a6 f5       	brtc	.+104    	; 0x35a <__addsf3x+0x80>
 2f2:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_zero>
 2f6:	0e f4       	brtc	.+2      	; 0x2fa <__addsf3x+0x20>
 2f8:	e0 95       	com	r30
 2fa:	0b 2e       	mov	r0, r27
 2fc:	ba 2f       	mov	r27, r26
 2fe:	a0 2d       	mov	r26, r0
 300:	0b 01       	movw	r0, r22
 302:	b9 01       	movw	r22, r18
 304:	90 01       	movw	r18, r0
 306:	0c 01       	movw	r0, r24
 308:	ca 01       	movw	r24, r20
 30a:	a0 01       	movw	r20, r0
 30c:	11 24       	eor	r1, r1
 30e:	ff 27       	eor	r31, r31
 310:	59 1b       	sub	r21, r25
 312:	99 f0       	breq	.+38     	; 0x33a <__addsf3x+0x60>
 314:	59 3f       	cpi	r21, 0xF9	; 249
 316:	50 f4       	brcc	.+20     	; 0x32c <__addsf3x+0x52>
 318:	50 3e       	cpi	r21, 0xE0	; 224
 31a:	68 f1       	brcs	.+90     	; 0x376 <__addsf3x+0x9c>
 31c:	1a 16       	cp	r1, r26
 31e:	f0 40       	sbci	r31, 0x00	; 0
 320:	a2 2f       	mov	r26, r18
 322:	23 2f       	mov	r18, r19
 324:	34 2f       	mov	r19, r20
 326:	44 27       	eor	r20, r20
 328:	58 5f       	subi	r21, 0xF8	; 248
 32a:	f3 cf       	rjmp	.-26     	; 0x312 <__addsf3x+0x38>
 32c:	46 95       	lsr	r20
 32e:	37 95       	ror	r19
 330:	27 95       	ror	r18
 332:	a7 95       	ror	r26
 334:	f0 40       	sbci	r31, 0x00	; 0
 336:	53 95       	inc	r21
 338:	c9 f7       	brne	.-14     	; 0x32c <__addsf3x+0x52>
 33a:	7e f4       	brtc	.+30     	; 0x35a <__addsf3x+0x80>
 33c:	1f 16       	cp	r1, r31
 33e:	ba 0b       	sbc	r27, r26
 340:	62 0b       	sbc	r22, r18
 342:	73 0b       	sbc	r23, r19
 344:	84 0b       	sbc	r24, r20
 346:	ba f0       	brmi	.+46     	; 0x376 <__addsf3x+0x9c>
 348:	91 50       	subi	r25, 0x01	; 1
 34a:	a1 f0       	breq	.+40     	; 0x374 <__addsf3x+0x9a>
 34c:	ff 0f       	add	r31, r31
 34e:	bb 1f       	adc	r27, r27
 350:	66 1f       	adc	r22, r22
 352:	77 1f       	adc	r23, r23
 354:	88 1f       	adc	r24, r24
 356:	c2 f7       	brpl	.-16     	; 0x348 <__addsf3x+0x6e>
 358:	0e c0       	rjmp	.+28     	; 0x376 <__addsf3x+0x9c>
 35a:	ba 0f       	add	r27, r26
 35c:	62 1f       	adc	r22, r18
 35e:	73 1f       	adc	r23, r19
 360:	84 1f       	adc	r24, r20
 362:	48 f4       	brcc	.+18     	; 0x376 <__addsf3x+0x9c>
 364:	87 95       	ror	r24
 366:	77 95       	ror	r23
 368:	67 95       	ror	r22
 36a:	b7 95       	ror	r27
 36c:	f7 95       	ror	r31
 36e:	9e 3f       	cpi	r25, 0xFE	; 254
 370:	08 f0       	brcs	.+2      	; 0x374 <__addsf3x+0x9a>
 372:	b0 cf       	rjmp	.-160    	; 0x2d4 <__addsf3+0x28>
 374:	93 95       	inc	r25
 376:	88 0f       	add	r24, r24
 378:	08 f0       	brcs	.+2      	; 0x37c <__addsf3x+0xa2>
 37a:	99 27       	eor	r25, r25
 37c:	ee 0f       	add	r30, r30
 37e:	97 95       	ror	r25
 380:	87 95       	ror	r24
 382:	08 95       	ret

00000384 <__cmpsf2>:
 384:	0e 94 a5 02 	call	0x54a	; 0x54a <__fp_cmp>
 388:	08 f4       	brcc	.+2      	; 0x38c <__cmpsf2+0x8>
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	08 95       	ret

0000038e <__divsf3>:
 38e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__divsf3x>
 392:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 396:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 39a:	58 f0       	brcs	.+22     	; 0x3b2 <__divsf3+0x24>
 39c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 3a0:	40 f0       	brcs	.+16     	; 0x3b2 <__divsf3+0x24>
 3a2:	29 f4       	brne	.+10     	; 0x3ae <__divsf3+0x20>
 3a4:	5f 3f       	cpi	r21, 0xFF	; 255
 3a6:	29 f0       	breq	.+10     	; 0x3b2 <__divsf3+0x24>
 3a8:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 3ac:	51 11       	cpse	r21, r1
 3ae:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 3b2:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>

000003b6 <__divsf3x>:
 3b6:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 3ba:	68 f3       	brcs	.-38     	; 0x396 <__divsf3+0x8>

000003bc <__divsf3_pse>:
 3bc:	99 23       	and	r25, r25
 3be:	b1 f3       	breq	.-20     	; 0x3ac <__divsf3+0x1e>
 3c0:	55 23       	and	r21, r21
 3c2:	91 f3       	breq	.-28     	; 0x3a8 <__divsf3+0x1a>
 3c4:	95 1b       	sub	r25, r21
 3c6:	55 0b       	sbc	r21, r21
 3c8:	bb 27       	eor	r27, r27
 3ca:	aa 27       	eor	r26, r26
 3cc:	62 17       	cp	r22, r18
 3ce:	73 07       	cpc	r23, r19
 3d0:	84 07       	cpc	r24, r20
 3d2:	38 f0       	brcs	.+14     	; 0x3e2 <__divsf3_pse+0x26>
 3d4:	9f 5f       	subi	r25, 0xFF	; 255
 3d6:	5f 4f       	sbci	r21, 0xFF	; 255
 3d8:	22 0f       	add	r18, r18
 3da:	33 1f       	adc	r19, r19
 3dc:	44 1f       	adc	r20, r20
 3de:	aa 1f       	adc	r26, r26
 3e0:	a9 f3       	breq	.-22     	; 0x3cc <__divsf3_pse+0x10>
 3e2:	35 d0       	rcall	.+106    	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 3e4:	0e 2e       	mov	r0, r30
 3e6:	3a f0       	brmi	.+14     	; 0x3f6 <__divsf3_pse+0x3a>
 3e8:	e0 e8       	ldi	r30, 0x80	; 128
 3ea:	32 d0       	rcall	.+100    	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 3ec:	91 50       	subi	r25, 0x01	; 1
 3ee:	50 40       	sbci	r21, 0x00	; 0
 3f0:	e6 95       	lsr	r30
 3f2:	00 1c       	adc	r0, r0
 3f4:	ca f7       	brpl	.-14     	; 0x3e8 <__divsf3_pse+0x2c>
 3f6:	2b d0       	rcall	.+86     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 3f8:	fe 2f       	mov	r31, r30
 3fa:	29 d0       	rcall	.+82     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 3fc:	66 0f       	add	r22, r22
 3fe:	77 1f       	adc	r23, r23
 400:	88 1f       	adc	r24, r24
 402:	bb 1f       	adc	r27, r27
 404:	26 17       	cp	r18, r22
 406:	37 07       	cpc	r19, r23
 408:	48 07       	cpc	r20, r24
 40a:	ab 07       	cpc	r26, r27
 40c:	b0 e8       	ldi	r27, 0x80	; 128
 40e:	09 f0       	breq	.+2      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 410:	bb 0b       	sbc	r27, r27
 412:	80 2d       	mov	r24, r0
 414:	bf 01       	movw	r22, r30
 416:	ff 27       	eor	r31, r31
 418:	93 58       	subi	r25, 0x83	; 131
 41a:	5f 4f       	sbci	r21, 0xFF	; 255
 41c:	3a f0       	brmi	.+14     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 41e:	9e 3f       	cpi	r25, 0xFE	; 254
 420:	51 05       	cpc	r21, r1
 422:	78 f0       	brcs	.+30     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 424:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 428:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	e4 f3       	brlt	.-8      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 430:	98 3e       	cpi	r25, 0xE8	; 232
 432:	d4 f3       	brlt	.-12     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b7 95       	ror	r27
 43c:	f7 95       	ror	r31
 43e:	9f 5f       	subi	r25, 0xFF	; 255
 440:	c9 f7       	brne	.-14     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 442:	88 0f       	add	r24, r24
 444:	91 1d       	adc	r25, r1
 446:	96 95       	lsr	r25
 448:	87 95       	ror	r24
 44a:	97 f9       	bld	r25, 7
 44c:	08 95       	ret
 44e:	e1 e0       	ldi	r30, 0x01	; 1
 450:	66 0f       	add	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	88 1f       	adc	r24, r24
 456:	bb 1f       	adc	r27, r27
 458:	62 17       	cp	r22, r18
 45a:	73 07       	cpc	r23, r19
 45c:	84 07       	cpc	r24, r20
 45e:	ba 07       	cpc	r27, r26
 460:	20 f0       	brcs	.+8      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 462:	62 1b       	sub	r22, r18
 464:	73 0b       	sbc	r23, r19
 466:	84 0b       	sbc	r24, r20
 468:	ba 0b       	sbc	r27, r26
 46a:	ee 1f       	adc	r30, r30
 46c:	88 f7       	brcc	.-30     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 46e:	e0 95       	com	r30
 470:	08 95       	ret

00000472 <__fixunssfsi>:
 472:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_splitA>
 476:	88 f0       	brcs	.+34     	; 0x49a <__fixunssfsi+0x28>
 478:	9f 57       	subi	r25, 0x7F	; 127
 47a:	98 f0       	brcs	.+38     	; 0x4a2 <__fixunssfsi+0x30>
 47c:	b9 2f       	mov	r27, r25
 47e:	99 27       	eor	r25, r25
 480:	b7 51       	subi	r27, 0x17	; 23
 482:	b0 f0       	brcs	.+44     	; 0x4b0 <__fixunssfsi+0x3e>
 484:	e1 f0       	breq	.+56     	; 0x4be <__fixunssfsi+0x4c>
 486:	66 0f       	add	r22, r22
 488:	77 1f       	adc	r23, r23
 48a:	88 1f       	adc	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	1a f0       	brmi	.+6      	; 0x496 <__fixunssfsi+0x24>
 490:	ba 95       	dec	r27
 492:	c9 f7       	brne	.-14     	; 0x486 <__fixunssfsi+0x14>
 494:	14 c0       	rjmp	.+40     	; 0x4be <__fixunssfsi+0x4c>
 496:	b1 30       	cpi	r27, 0x01	; 1
 498:	91 f0       	breq	.+36     	; 0x4be <__fixunssfsi+0x4c>
 49a:	0e 94 13 03 	call	0x626	; 0x626 <__fp_zero>
 49e:	b1 e0       	ldi	r27, 0x01	; 1
 4a0:	08 95       	ret
 4a2:	0c 94 13 03 	jmp	0x626	; 0x626 <__fp_zero>
 4a6:	67 2f       	mov	r22, r23
 4a8:	78 2f       	mov	r23, r24
 4aa:	88 27       	eor	r24, r24
 4ac:	b8 5f       	subi	r27, 0xF8	; 248
 4ae:	39 f0       	breq	.+14     	; 0x4be <__fixunssfsi+0x4c>
 4b0:	b9 3f       	cpi	r27, 0xF9	; 249
 4b2:	cc f3       	brlt	.-14     	; 0x4a6 <__fixunssfsi+0x34>
 4b4:	86 95       	lsr	r24
 4b6:	77 95       	ror	r23
 4b8:	67 95       	ror	r22
 4ba:	b3 95       	inc	r27
 4bc:	d9 f7       	brne	.-10     	; 0x4b4 <__fixunssfsi+0x42>
 4be:	3e f4       	brtc	.+14     	; 0x4ce <__fixunssfsi+0x5c>
 4c0:	90 95       	com	r25
 4c2:	80 95       	com	r24
 4c4:	70 95       	com	r23
 4c6:	61 95       	neg	r22
 4c8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ca:	8f 4f       	sbci	r24, 0xFF	; 255
 4cc:	9f 4f       	sbci	r25, 0xFF	; 255
 4ce:	08 95       	ret

000004d0 <__floatunsisf>:
 4d0:	e8 94       	clt
 4d2:	09 c0       	rjmp	.+18     	; 0x4e6 <__floatsisf+0x12>

000004d4 <__floatsisf>:
 4d4:	97 fb       	bst	r25, 7
 4d6:	3e f4       	brtc	.+14     	; 0x4e6 <__floatsisf+0x12>
 4d8:	90 95       	com	r25
 4da:	80 95       	com	r24
 4dc:	70 95       	com	r23
 4de:	61 95       	neg	r22
 4e0:	7f 4f       	sbci	r23, 0xFF	; 255
 4e2:	8f 4f       	sbci	r24, 0xFF	; 255
 4e4:	9f 4f       	sbci	r25, 0xFF	; 255
 4e6:	99 23       	and	r25, r25
 4e8:	a9 f0       	breq	.+42     	; 0x514 <__floatsisf+0x40>
 4ea:	f9 2f       	mov	r31, r25
 4ec:	96 e9       	ldi	r25, 0x96	; 150
 4ee:	bb 27       	eor	r27, r27
 4f0:	93 95       	inc	r25
 4f2:	f6 95       	lsr	r31
 4f4:	87 95       	ror	r24
 4f6:	77 95       	ror	r23
 4f8:	67 95       	ror	r22
 4fa:	b7 95       	ror	r27
 4fc:	f1 11       	cpse	r31, r1
 4fe:	f8 cf       	rjmp	.-16     	; 0x4f0 <__floatsisf+0x1c>
 500:	fa f4       	brpl	.+62     	; 0x540 <__floatsisf+0x6c>
 502:	bb 0f       	add	r27, r27
 504:	11 f4       	brne	.+4      	; 0x50a <__floatsisf+0x36>
 506:	60 ff       	sbrs	r22, 0
 508:	1b c0       	rjmp	.+54     	; 0x540 <__floatsisf+0x6c>
 50a:	6f 5f       	subi	r22, 0xFF	; 255
 50c:	7f 4f       	sbci	r23, 0xFF	; 255
 50e:	8f 4f       	sbci	r24, 0xFF	; 255
 510:	9f 4f       	sbci	r25, 0xFF	; 255
 512:	16 c0       	rjmp	.+44     	; 0x540 <__floatsisf+0x6c>
 514:	88 23       	and	r24, r24
 516:	11 f0       	breq	.+4      	; 0x51c <__floatsisf+0x48>
 518:	96 e9       	ldi	r25, 0x96	; 150
 51a:	11 c0       	rjmp	.+34     	; 0x53e <__floatsisf+0x6a>
 51c:	77 23       	and	r23, r23
 51e:	21 f0       	breq	.+8      	; 0x528 <__floatsisf+0x54>
 520:	9e e8       	ldi	r25, 0x8E	; 142
 522:	87 2f       	mov	r24, r23
 524:	76 2f       	mov	r23, r22
 526:	05 c0       	rjmp	.+10     	; 0x532 <__floatsisf+0x5e>
 528:	66 23       	and	r22, r22
 52a:	71 f0       	breq	.+28     	; 0x548 <__floatsisf+0x74>
 52c:	96 e8       	ldi	r25, 0x86	; 134
 52e:	86 2f       	mov	r24, r22
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	60 e0       	ldi	r22, 0x00	; 0
 534:	2a f0       	brmi	.+10     	; 0x540 <__floatsisf+0x6c>
 536:	9a 95       	dec	r25
 538:	66 0f       	add	r22, r22
 53a:	77 1f       	adc	r23, r23
 53c:	88 1f       	adc	r24, r24
 53e:	da f7       	brpl	.-10     	; 0x536 <__floatsisf+0x62>
 540:	88 0f       	add	r24, r24
 542:	96 95       	lsr	r25
 544:	87 95       	ror	r24
 546:	97 f9       	bld	r25, 7
 548:	08 95       	ret

0000054a <__fp_cmp>:
 54a:	99 0f       	add	r25, r25
 54c:	00 08       	sbc	r0, r0
 54e:	55 0f       	add	r21, r21
 550:	aa 0b       	sbc	r26, r26
 552:	e0 e8       	ldi	r30, 0x80	; 128
 554:	fe ef       	ldi	r31, 0xFE	; 254
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	e8 07       	cpc	r30, r24
 55c:	f9 07       	cpc	r31, r25
 55e:	c0 f0       	brcs	.+48     	; 0x590 <__fp_cmp+0x46>
 560:	12 16       	cp	r1, r18
 562:	13 06       	cpc	r1, r19
 564:	e4 07       	cpc	r30, r20
 566:	f5 07       	cpc	r31, r21
 568:	98 f0       	brcs	.+38     	; 0x590 <__fp_cmp+0x46>
 56a:	62 1b       	sub	r22, r18
 56c:	73 0b       	sbc	r23, r19
 56e:	84 0b       	sbc	r24, r20
 570:	95 0b       	sbc	r25, r21
 572:	39 f4       	brne	.+14     	; 0x582 <__fp_cmp+0x38>
 574:	0a 26       	eor	r0, r26
 576:	61 f0       	breq	.+24     	; 0x590 <__fp_cmp+0x46>
 578:	23 2b       	or	r18, r19
 57a:	24 2b       	or	r18, r20
 57c:	25 2b       	or	r18, r21
 57e:	21 f4       	brne	.+8      	; 0x588 <__fp_cmp+0x3e>
 580:	08 95       	ret
 582:	0a 26       	eor	r0, r26
 584:	09 f4       	brne	.+2      	; 0x588 <__fp_cmp+0x3e>
 586:	a1 40       	sbci	r26, 0x01	; 1
 588:	a6 95       	lsr	r26
 58a:	8f ef       	ldi	r24, 0xFF	; 255
 58c:	81 1d       	adc	r24, r1
 58e:	81 1d       	adc	r24, r1
 590:	08 95       	ret

00000592 <__fp_inf>:
 592:	97 f9       	bld	r25, 7
 594:	9f 67       	ori	r25, 0x7F	; 127
 596:	80 e8       	ldi	r24, 0x80	; 128
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	08 95       	ret

0000059e <__fp_nan>:
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	80 ec       	ldi	r24, 0xC0	; 192
 5a2:	08 95       	ret

000005a4 <__fp_pscA>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	09 06       	cpc	r0, r25
 5b0:	08 95       	ret

000005b2 <__fp_pscB>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	05 06       	cpc	r0, r21
 5be:	08 95       	ret

000005c0 <__fp_round>:
 5c0:	09 2e       	mov	r0, r25
 5c2:	03 94       	inc	r0
 5c4:	00 0c       	add	r0, r0
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__fp_round+0xc>
 5c8:	88 23       	and	r24, r24
 5ca:	52 f0       	brmi	.+20     	; 0x5e0 <__fp_round+0x20>
 5cc:	bb 0f       	add	r27, r27
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <__fp_round+0x20>
 5d0:	bf 2b       	or	r27, r31
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0x18>
 5d4:	60 ff       	sbrs	r22, 0
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__fp_round+0x20>
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__fp_split3>:
 5e2:	57 fd       	sbrc	r21, 7
 5e4:	90 58       	subi	r25, 0x80	; 128
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	59 f0       	breq	.+22     	; 0x602 <__fp_splitA+0x10>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	71 f0       	breq	.+28     	; 0x60c <__fp_splitA+0x1a>
 5f0:	47 95       	ror	r20

000005f2 <__fp_splitA>:
 5f2:	88 0f       	add	r24, r24
 5f4:	97 fb       	bst	r25, 7
 5f6:	99 1f       	adc	r25, r25
 5f8:	61 f0       	breq	.+24     	; 0x612 <__fp_splitA+0x20>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	79 f0       	breq	.+30     	; 0x61c <__fp_splitA+0x2a>
 5fe:	87 95       	ror	r24
 600:	08 95       	ret
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	55 1f       	adc	r21, r21
 60a:	f2 cf       	rjmp	.-28     	; 0x5f0 <__fp_split3+0xe>
 60c:	46 95       	lsr	r20
 60e:	f1 df       	rcall	.-30     	; 0x5f2 <__fp_splitA>
 610:	08 c0       	rjmp	.+16     	; 0x622 <__fp_splitA+0x30>
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	99 1f       	adc	r25, r25
 61a:	f1 cf       	rjmp	.-30     	; 0x5fe <__fp_splitA+0xc>
 61c:	86 95       	lsr	r24
 61e:	71 05       	cpc	r23, r1
 620:	61 05       	cpc	r22, r1
 622:	08 94       	sec
 624:	08 95       	ret

00000626 <__fp_zero>:
 626:	e8 94       	clt

00000628 <__fp_szero>:
 628:	bb 27       	eor	r27, r27
 62a:	66 27       	eor	r22, r22
 62c:	77 27       	eor	r23, r23
 62e:	cb 01       	movw	r24, r22
 630:	97 f9       	bld	r25, 7
 632:	08 95       	ret

00000634 <__gesf2>:
 634:	0e 94 a5 02 	call	0x54a	; 0x54a <__fp_cmp>
 638:	08 f4       	brcc	.+2      	; 0x63c <__gesf2+0x8>
 63a:	8f ef       	ldi	r24, 0xFF	; 255
 63c:	08 95       	ret

0000063e <__mulsf3>:
 63e:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3x>
 642:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 646:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 64a:	38 f0       	brcs	.+14     	; 0x65a <__mulsf3+0x1c>
 64c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 650:	20 f0       	brcs	.+8      	; 0x65a <__mulsf3+0x1c>
 652:	95 23       	and	r25, r21
 654:	11 f0       	breq	.+4      	; 0x65a <__mulsf3+0x1c>
 656:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 65a:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 65e:	11 24       	eor	r1, r1
 660:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>

00000664 <__mulsf3x>:
 664:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 668:	70 f3       	brcs	.-36     	; 0x646 <__mulsf3+0x8>

0000066a <__mulsf3_pse>:
 66a:	95 9f       	mul	r25, r21
 66c:	c1 f3       	breq	.-16     	; 0x65e <__mulsf3+0x20>
 66e:	95 0f       	add	r25, r21
 670:	50 e0       	ldi	r21, 0x00	; 0
 672:	55 1f       	adc	r21, r21
 674:	62 9f       	mul	r22, r18
 676:	f0 01       	movw	r30, r0
 678:	72 9f       	mul	r23, r18
 67a:	bb 27       	eor	r27, r27
 67c:	f0 0d       	add	r31, r0
 67e:	b1 1d       	adc	r27, r1
 680:	63 9f       	mul	r22, r19
 682:	aa 27       	eor	r26, r26
 684:	f0 0d       	add	r31, r0
 686:	b1 1d       	adc	r27, r1
 688:	aa 1f       	adc	r26, r26
 68a:	64 9f       	mul	r22, r20
 68c:	66 27       	eor	r22, r22
 68e:	b0 0d       	add	r27, r0
 690:	a1 1d       	adc	r26, r1
 692:	66 1f       	adc	r22, r22
 694:	82 9f       	mul	r24, r18
 696:	22 27       	eor	r18, r18
 698:	b0 0d       	add	r27, r0
 69a:	a1 1d       	adc	r26, r1
 69c:	62 1f       	adc	r22, r18
 69e:	73 9f       	mul	r23, r19
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	62 1f       	adc	r22, r18
 6a6:	83 9f       	mul	r24, r19
 6a8:	a0 0d       	add	r26, r0
 6aa:	61 1d       	adc	r22, r1
 6ac:	22 1f       	adc	r18, r18
 6ae:	74 9f       	mul	r23, r20
 6b0:	33 27       	eor	r19, r19
 6b2:	a0 0d       	add	r26, r0
 6b4:	61 1d       	adc	r22, r1
 6b6:	23 1f       	adc	r18, r19
 6b8:	84 9f       	mul	r24, r20
 6ba:	60 0d       	add	r22, r0
 6bc:	21 1d       	adc	r18, r1
 6be:	82 2f       	mov	r24, r18
 6c0:	76 2f       	mov	r23, r22
 6c2:	6a 2f       	mov	r22, r26
 6c4:	11 24       	eor	r1, r1
 6c6:	9f 57       	subi	r25, 0x7F	; 127
 6c8:	50 40       	sbci	r21, 0x00	; 0
 6ca:	9a f0       	brmi	.+38     	; 0x6f2 <__mulsf3_pse+0x88>
 6cc:	f1 f0       	breq	.+60     	; 0x70a <__mulsf3_pse+0xa0>
 6ce:	88 23       	and	r24, r24
 6d0:	4a f0       	brmi	.+18     	; 0x6e4 <__mulsf3_pse+0x7a>
 6d2:	ee 0f       	add	r30, r30
 6d4:	ff 1f       	adc	r31, r31
 6d6:	bb 1f       	adc	r27, r27
 6d8:	66 1f       	adc	r22, r22
 6da:	77 1f       	adc	r23, r23
 6dc:	88 1f       	adc	r24, r24
 6de:	91 50       	subi	r25, 0x01	; 1
 6e0:	50 40       	sbci	r21, 0x00	; 0
 6e2:	a9 f7       	brne	.-22     	; 0x6ce <__mulsf3_pse+0x64>
 6e4:	9e 3f       	cpi	r25, 0xFE	; 254
 6e6:	51 05       	cpc	r21, r1
 6e8:	80 f0       	brcs	.+32     	; 0x70a <__mulsf3_pse+0xa0>
 6ea:	0c 94 c9 02 	jmp	0x592	; 0x592 <__fp_inf>
 6ee:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_szero>
 6f2:	5f 3f       	cpi	r21, 0xFF	; 255
 6f4:	e4 f3       	brlt	.-8      	; 0x6ee <__mulsf3_pse+0x84>
 6f6:	98 3e       	cpi	r25, 0xE8	; 232
 6f8:	d4 f3       	brlt	.-12     	; 0x6ee <__mulsf3_pse+0x84>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b7 95       	ror	r27
 702:	f7 95       	ror	r31
 704:	e7 95       	ror	r30
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	c1 f7       	brne	.-16     	; 0x6fa <__mulsf3_pse+0x90>
 70a:	fe 2b       	or	r31, r30
 70c:	88 0f       	add	r24, r24
 70e:	91 1d       	adc	r25, r1
 710:	96 95       	lsr	r25
 712:	87 95       	ror	r24
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <_exit>:
 718:	f8 94       	cli

0000071a <__stop_program>:
 71a:	ff cf       	rjmp	.-2      	; 0x71a <__stop_program>
